2019-07-02 08:39:37.895 [restartedMain] DEBUG com.basic.javaframe.DemoApplication - Running with Spring Boot v2.1.3.RELEASE, Spring v5.1.5.RELEASE
2019-07-02 08:40:04.031 [http-nio-9091-exec-3] DEBUG c.b.j.d.I.getSingleInfoByCateGuid - ==>  Preparing: select info_guid from Information_Info_Category where category_guid =? order by create_time desc limit 1; 
2019-07-02 08:40:04.079 [http-nio-9091-exec-3] DEBUG c.b.j.d.I.getSingleInfoByCateGuid - ==> Parameters: 870d1b38-5615-4f42-9c3f-09ce31c33d45(String)
2019-07-02 08:40:04.113 [http-nio-9091-exec-3] DEBUG c.b.j.d.I.getSingleInfoByCateGuid - <==      Total: 1
2019-07-02 08:40:04.178 [http-nio-9091-exec-3] DEBUG c.b.j.dao.InformationInfoDao.getHosIntroduction - ==>  Preparing: select * from Information_Info where category_guid=? and del_flag=0 and status=1 order by create_time desc limit 1; 
2019-07-02 08:40:04.179 [http-nio-9091-exec-3] DEBUG c.b.j.dao.InformationInfoDao.getHosIntroduction - ==> Parameters: 3f6309c8-4181-4566-a47e-f17a031954c3(String)
2019-07-02 08:40:04.282 [http-nio-9091-exec-3] DEBUG c.b.j.dao.InformationInfoDao.getHosIntroduction - <==      Total: 1
2019-07-02 14:01:47.297 [restartedMain] DEBUG com.basic.javaframe.DemoApplication - Running with Spring Boot v2.1.3.RELEASE, Spring v5.1.5.RELEASE
2019-07-02 14:03:28.610 [http-nio-9091-exec-7] DEBUG c.b.j.dao.SecHos_PatientDao.getPatientByOpenid - ==>  Preparing: select p.*,h.row_id as hospitalizedRowId,h.row_guid as hospitalizedrowGuid, h.medical_number,h.patid,h.hospitalized_status, o.row_id as outpatientRowId,o.row_guid as outpatientrowGuid, o.medical_numberMZ,o.patidMZ from sechos_patient p left join sechos_hospitalized h on p.row_guid = h.patient_rowGuid left join sechos_outpatient o on p.row_guid = o.patient_rowGuidMZ where p.openid =? and p.del_flag=0 
2019-07-02 14:03:28.654 [http-nio-9091-exec-7] DEBUG c.b.j.dao.SecHos_PatientDao.getPatientByOpenid - ==> Parameters: oZiqE55zwgZbciyaEmLVf5nwAslc(String)
2019-07-02 14:03:28.694 [http-nio-9091-exec-7] DEBUG c.b.j.dao.SecHos_PatientDao.getPatientByOpenid - <==      Total: 0
2019-07-02 14:03:42.726 [http-nio-9091-exec-8] DEBUG c.b.j.dao.SecHos_PatientDao.getPatientByOpenid - ==>  Preparing: select p.*,h.row_id as hospitalizedRowId,h.row_guid as hospitalizedrowGuid, h.medical_number,h.patid,h.hospitalized_status, o.row_id as outpatientRowId,o.row_guid as outpatientrowGuid, o.medical_numberMZ,o.patidMZ from sechos_patient p left join sechos_hospitalized h on p.row_guid = h.patient_rowGuid left join sechos_outpatient o on p.row_guid = o.patient_rowGuidMZ where p.openid =? and p.del_flag=0 
2019-07-02 14:03:42.727 [http-nio-9091-exec-8] DEBUG c.b.j.dao.SecHos_PatientDao.getPatientByOpenid - ==> Parameters: oZiqE55zwgZbciyaEmLVf5nwAslc(String)
2019-07-02 14:03:42.747 [http-nio-9091-exec-8] DEBUG c.b.j.dao.SecHos_PatientDao.getPatientByOpenid - <==      Total: 0
2019-07-02 14:05:31.690 [http-nio-9091-exec-10] DEBUG c.b.j.dao.SecHos_PatientDao.getPatientByOpenid - ==>  Preparing: select p.*,h.row_id as hospitalizedRowId,h.row_guid as hospitalizedrowGuid, h.medical_number,h.patid,h.hospitalized_status, o.row_id as outpatientRowId,o.row_guid as outpatientrowGuid, o.medical_numberMZ,o.patidMZ from sechos_patient p left join sechos_hospitalized h on p.row_guid = h.patient_rowGuid left join sechos_outpatient o on p.row_guid = o.patient_rowGuidMZ where p.openid =? and p.del_flag=0 
2019-07-02 14:05:31.691 [http-nio-9091-exec-10] DEBUG c.b.j.dao.SecHos_PatientDao.getPatientByOpenid - ==> Parameters: 123456(String)
2019-07-02 14:05:31.715 [http-nio-9091-exec-10] DEBUG c.b.j.dao.SecHos_PatientDao.getPatientByOpenid - <==      Total: 3
2019-07-02 14:05:31.780 [http-nio-9091-exec-10] DEBUG com.basic.javaframe.dao.SecHos_PatientDao.update - ==>  Preparing: update sechos_patient SET `row_guid` = ?, `create_time` = ?, `del_flag` = ?, `sort_sq` = ?, `patient_birth` = ?, `patient_name` = ?, `patient_sex` = ?, `patient_idcard` = ?, `patient_address` = ?, `patient_mobile` = ?, `openid` = ? where row_guid = ? 
2019-07-02 14:05:31.781 [http-nio-9091-exec-10] DEBUG com.basic.javaframe.dao.SecHos_PatientDao.update - ==> Parameters: 222536ff-8e06-4d0e-badd-3890e68757bc(String), 2019-06-17 16:33:32.0(Timestamp), 0(Integer), 0(Integer), 1995-07-12 00:00:00.0(Timestamp), 张文远(String), 1(Integer), 34242519951220493X(String), 测试地址(String), 11189812(String), 123456(String), 222536ff-8e06-4d0e-badd-3890e68757bc(String)
2019-07-02 14:05:31.830 [http-nio-9091-exec-10] DEBUG com.basic.javaframe.dao.SecHos_PatientDao.update - <==    Updates: 1
2019-07-02 14:05:32.008 [http-nio-9091-exec-10] DEBUG com.basic.javaframe.dao.SecHos_OutpatientDao.save - ==>  Preparing: insert into sechos_outpatient ( `row_guid`, `create_time`, `del_flag`, `sort_sq`, `medical_numberMZ`, `patidMZ`, `patient_rowGuidMZ` ) values ( ?, ?, ?, ?, ?, ?, ? ) 
2019-07-02 14:05:32.012 [http-nio-9091-exec-10] DEBUG com.basic.javaframe.dao.SecHos_OutpatientDao.save - ==> Parameters: 2cfb5541-1237-4cb8-ac30-1a10493c4934(String), 2019-07-02 14:05:31.0(Timestamp), 0(Integer), null, 2019035035(String), 348431(String), 222536ff-8e06-4d0e-badd-3890e68757bc(String)
2019-07-02 14:05:32.033 [http-nio-9091-exec-10] DEBUG com.basic.javaframe.dao.SecHos_OutpatientDao.save - <==    Updates: 1
2019-07-02 14:06:38.833 [http-nio-9091-exec-2] DEBUG c.b.j.dao.SecHos_PatientDao.getPatientByOpenid - ==>  Preparing: select p.*,h.row_id as hospitalizedRowId,h.row_guid as hospitalizedrowGuid, h.medical_number,h.patid,h.hospitalized_status, o.row_id as outpatientRowId,o.row_guid as outpatientrowGuid, o.medical_numberMZ,o.patidMZ from sechos_patient p left join sechos_hospitalized h on p.row_guid = h.patient_rowGuid left join sechos_outpatient o on p.row_guid = o.patient_rowGuidMZ where p.openid =? and p.del_flag=0 
2019-07-02 14:06:38.834 [http-nio-9091-exec-2] DEBUG c.b.j.dao.SecHos_PatientDao.getPatientByOpenid - ==> Parameters: 123456(String)
2019-07-02 14:06:38.849 [http-nio-9091-exec-2] DEBUG c.b.j.dao.SecHos_PatientDao.getPatientByOpenid - <==      Total: 3
2019-07-02 14:06:38.890 [http-nio-9091-exec-2] DEBUG com.basic.javaframe.dao.SecHos_PatientDao.update - ==>  Preparing: update sechos_patient SET `row_guid` = ?, `create_time` = ?, `del_flag` = ?, `sort_sq` = ?, `patient_birth` = ?, `patient_name` = ?, `patient_sex` = ?, `patient_idcard` = ?, `patient_address` = ?, `patient_mobile` = ?, `openid` = ? where row_guid = ? 
2019-07-02 14:06:38.895 [http-nio-9091-exec-2] DEBUG com.basic.javaframe.dao.SecHos_PatientDao.update - ==> Parameters: 222536ff-8e06-4d0e-badd-3890e68757bc(String), 2019-06-17 16:33:32.0(Timestamp), 0(Integer), 0(Integer), 1995-07-12 00:00:00.0(Timestamp), 张文远(String), 1(Integer), 34242519951220493X(String), 测试地址(String), 11189812(String), 123456(String), 222536ff-8e06-4d0e-badd-3890e68757bc(String)
2019-07-02 14:06:38.966 [http-nio-9091-exec-2] DEBUG com.basic.javaframe.dao.SecHos_PatientDao.update - <==    Updates: 1
2019-07-02 14:06:39.033 [http-nio-9091-exec-2] DEBUG c.b.javaframe.dao.SecHos_OutpatientDao.deleteBatch - ==>  Preparing: delete from sechos_outpatient where row_guid in ( ? ) 
2019-07-02 14:06:39.034 [http-nio-9091-exec-2] DEBUG c.b.javaframe.dao.SecHos_OutpatientDao.deleteBatch - ==> Parameters: 2cfb5541-1237-4cb8-ac30-1a10493c4934(String)
2019-07-02 14:06:39.040 [http-nio-9091-exec-2] DEBUG c.b.javaframe.dao.SecHos_OutpatientDao.deleteBatch - <==    Updates: 1
2019-07-02 14:06:39.076 [http-nio-9091-exec-2] DEBUG com.basic.javaframe.dao.SecHos_OutpatientDao.save - ==>  Preparing: insert into sechos_outpatient ( `row_guid`, `create_time`, `del_flag`, `sort_sq`, `medical_numberMZ`, `patidMZ`, `patient_rowGuidMZ` ) values ( ?, ?, ?, ?, ?, ?, ? ) 
2019-07-02 14:06:39.079 [http-nio-9091-exec-2] DEBUG com.basic.javaframe.dao.SecHos_OutpatientDao.save - ==> Parameters: 68555edf-cacc-47a6-9ce8-508f53ceee0c(String), 2019-07-02 14:06:39.0(Timestamp), 0(Integer), null, 2019035035(String), 348431(String), 222536ff-8e06-4d0e-badd-3890e68757bc(String)
2019-07-02 14:06:39.090 [http-nio-9091-exec-2] DEBUG com.basic.javaframe.dao.SecHos_OutpatientDao.save - <==    Updates: 1
2019-07-02 14:11:20.224 [http-nio-9091-exec-3] DEBUG c.b.j.dao.SecHos_PatientDao.getPatientByOpenid - ==>  Preparing: select p.*,h.row_id as hospitalizedRowId,h.row_guid as hospitalizedrowGuid, h.medical_number,h.patid,h.hospitalized_status, o.row_id as outpatientRowId,o.row_guid as outpatientrowGuid, o.medical_numberMZ,o.patidMZ from sechos_patient p left join sechos_hospitalized h on p.row_guid = h.patient_rowGuid left join sechos_outpatient o on p.row_guid = o.patient_rowGuidMZ where p.openid =? and p.del_flag=0 
2019-07-02 14:11:20.226 [http-nio-9091-exec-3] DEBUG c.b.j.dao.SecHos_PatientDao.getPatientByOpenid - ==> Parameters: 123456(String)
2019-07-02 14:11:20.412 [http-nio-9091-exec-3] DEBUG c.b.j.dao.SecHos_PatientDao.getPatientByOpenid - <==      Total: 3
2019-07-02 14:11:20.925 [http-nio-9091-exec-3] DEBUG com.basic.javaframe.dao.SecHos_PatientDao.update - ==>  Preparing: update sechos_patient SET `row_guid` = ?, `create_time` = ?, `del_flag` = ?, `sort_sq` = ?, `patient_birth` = ?, `patient_name` = ?, `patient_sex` = ?, `patient_idcard` = ?, `patient_address` = ?, `patient_mobile` = ?, `openid` = ? where row_guid = ? 
2019-07-02 14:11:20.929 [http-nio-9091-exec-3] DEBUG com.basic.javaframe.dao.SecHos_PatientDao.update - ==> Parameters: 222536ff-8e06-4d0e-badd-3890e68757bc(String), 2019-06-17 16:33:32.0(Timestamp), 0(Integer), 0(Integer), 1995-07-12 00:00:00.0(Timestamp), 张文远(String), 1(Integer), 34242519951220493X(String), 测试地址(String), 11189812(String), 123456(String), 222536ff-8e06-4d0e-badd-3890e68757bc(String)
2019-07-02 14:11:21.404 [http-nio-9091-exec-3] DEBUG com.basic.javaframe.dao.SecHos_PatientDao.update - <==    Updates: 1
2019-07-02 14:11:21.694 [http-nio-9091-exec-3] DEBUG c.b.javaframe.dao.SecHos_OutpatientDao.deleteBatch - ==>  Preparing: delete from sechos_outpatient where row_guid in ( ? ) 
2019-07-02 14:11:21.695 [http-nio-9091-exec-3] DEBUG c.b.javaframe.dao.SecHos_OutpatientDao.deleteBatch - ==> Parameters: 68555edf-cacc-47a6-9ce8-508f53ceee0c(String)
2019-07-02 14:11:21.858 [http-nio-9091-exec-3] DEBUG c.b.javaframe.dao.SecHos_OutpatientDao.deleteBatch - <==    Updates: 1
2019-07-02 14:11:22.221 [http-nio-9091-exec-3] DEBUG com.basic.javaframe.dao.SecHos_OutpatientDao.save - ==>  Preparing: insert into sechos_outpatient ( `row_guid`, `create_time`, `del_flag`, `sort_sq`, `medical_numberMZ`, `patidMZ`, `patient_rowGuidMZ` ) values ( ?, ?, ?, ?, ?, ?, ? ) 
2019-07-02 14:11:22.225 [http-nio-9091-exec-3] DEBUG com.basic.javaframe.dao.SecHos_OutpatientDao.save - ==> Parameters: d22ec35b-46ba-4511-b12e-8108eb6dab4f(String), 2019-07-02 14:11:22.0(Timestamp), 0(Integer), null, 2019035035(String), 348431(String), 222536ff-8e06-4d0e-badd-3890e68757bc(String)
2019-07-02 14:11:22.429 [http-nio-9091-exec-3] DEBUG com.basic.javaframe.dao.SecHos_OutpatientDao.save - <==    Updates: 1
2019-07-02 14:14:49.039 [http-nio-9091-exec-9] DEBUG c.b.j.dao.SecHos_PatientDao.getPatientByOpenid - ==>  Preparing: select p.*,h.row_id as hospitalizedRowId,h.row_guid as hospitalizedrowGuid, h.medical_number,h.patid,h.hospitalized_status, o.row_id as outpatientRowId,o.row_guid as outpatientrowGuid, o.medical_numberMZ,o.patidMZ from sechos_patient p left join sechos_hospitalized h on p.row_guid = h.patient_rowGuid left join sechos_outpatient o on p.row_guid = o.patient_rowGuidMZ where p.openid =? and p.del_flag=0 
2019-07-02 14:14:49.041 [http-nio-9091-exec-9] DEBUG c.b.j.dao.SecHos_PatientDao.getPatientByOpenid - ==> Parameters: 123456(String)
2019-07-02 14:14:49.104 [http-nio-9091-exec-9] DEBUG c.b.j.dao.SecHos_PatientDao.getPatientByOpenid - <==      Total: 3
2019-07-02 14:14:49.121 [http-nio-9091-exec-9] DEBUG com.basic.javaframe.dao.SecHos_PatientDao.update - ==>  Preparing: update sechos_patient SET `row_guid` = ?, `create_time` = ?, `del_flag` = ?, `sort_sq` = ?, `patient_birth` = ?, `patient_name` = ?, `patient_sex` = ?, `patient_idcard` = ?, `patient_address` = ?, `patient_mobile` = ?, `openid` = ? where row_guid = ? 
2019-07-02 14:14:49.125 [http-nio-9091-exec-9] DEBUG com.basic.javaframe.dao.SecHos_PatientDao.update - ==> Parameters: 222536ff-8e06-4d0e-badd-3890e68757bc(String), 2019-06-17 16:33:32.0(Timestamp), 0(Integer), 0(Integer), 1995-07-12 00:00:00.0(Timestamp), 张文远(String), 1(Integer), 34242519951220493X(String), 测试地址(String), 11189812(String), 123456(String), 222536ff-8e06-4d0e-badd-3890e68757bc(String)
2019-07-02 14:14:49.135 [http-nio-9091-exec-9] DEBUG com.basic.javaframe.dao.SecHos_PatientDao.update - <==    Updates: 1
2019-07-02 14:14:49.192 [http-nio-9091-exec-9] DEBUG c.b.javaframe.dao.SecHos_OutpatientDao.deleteBatch - ==>  Preparing: delete from sechos_outpatient where row_guid in ( ? ) 
2019-07-02 14:14:49.195 [http-nio-9091-exec-9] DEBUG c.b.javaframe.dao.SecHos_OutpatientDao.deleteBatch - ==> Parameters: d22ec35b-46ba-4511-b12e-8108eb6dab4f(String)
2019-07-02 14:14:49.205 [http-nio-9091-exec-9] DEBUG c.b.javaframe.dao.SecHos_OutpatientDao.deleteBatch - <==    Updates: 1
2019-07-02 14:14:49.263 [http-nio-9091-exec-9] DEBUG com.basic.javaframe.dao.SecHos_OutpatientDao.save - ==>  Preparing: insert into sechos_outpatient ( `row_guid`, `create_time`, `del_flag`, `sort_sq`, `medical_numberMZ`, `patidMZ`, `patient_rowGuidMZ` ) values ( ?, ?, ?, ?, ?, ?, ? ) 
2019-07-02 14:14:49.268 [http-nio-9091-exec-9] DEBUG com.basic.javaframe.dao.SecHos_OutpatientDao.save - ==> Parameters: 7b7c247d-58fb-4f0e-9a8a-ff73fbb6032e(String), 2019-07-02 14:14:49.0(Timestamp), 0(Integer), null, 2019035035(String), 348431(String), 222536ff-8e06-4d0e-badd-3890e68757bc(String)
2019-07-02 14:14:49.274 [http-nio-9091-exec-9] DEBUG com.basic.javaframe.dao.SecHos_OutpatientDao.save - <==    Updates: 1
2019-07-02 14:29:28.807 [restartedMain] DEBUG com.basic.javaframe.DemoApplication - Running with Spring Boot v2.1.3.RELEASE, Spring v5.1.5.RELEASE
2019-07-02 14:30:11.865 [restartedMain] DEBUG com.basic.javaframe.DemoApplication - Running with Spring Boot v2.1.3.RELEASE, Spring v5.1.5.RELEASE
2019-07-02 14:31:35.702 [restartedMain] DEBUG com.basic.javaframe.DemoApplication - Running with Spring Boot v2.1.3.RELEASE, Spring v5.1.5.RELEASE
2019-07-02 15:28:51.365 [restartedMain] DEBUG com.basic.javaframe.DemoApplication - Running with Spring Boot v2.1.3.RELEASE, Spring v5.1.5.RELEASE
2019-07-02 16:25:01.975 [restartedMain] DEBUG com.basic.javaframe.DemoApplication - Running with Spring Boot v2.1.3.RELEASE, Spring v5.1.5.RELEASE
